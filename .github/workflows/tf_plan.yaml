name: "Terraform Plan"

# Trigger when a pull request is received
on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - terraform/**
  pull_request:
    branches:
    - main
    paths:
    - terraform/**
#env:
#  WORKING_DIRECTORY: "./src/terraform"
#  AWS_SHARED_CREDENTIALS_FILE: "~/.aws/credentials"

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v4

      # Static analysis of Terraform templates to spot potential security issues
      # Marketplace: https://github.com/marketplace/actions/terraform-security-scan
      #- name: "Setup - Security Scan"
      #  uses: triat/terraform-security-scan@v3.2.0
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Provides AWS credentials to Terraform
      # By default, Terraform checks the home directory for a .aws folder with a credential file
      # Documentation: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/create-shared-credentials-file.html
      - name: "Setup - Build AWS Credentials"
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v3.1.2

      # Init pulls credentials from the .aws/credentials file by default
      - name: "Run - Terraform Init"
        env:
          #AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #AWS_SHARED_CREDENTIALS_FILE: "/home/runner/.aws/credentials"
          WORKING_DIRECTORY: "./src/terraform"
          
        #working-directory: ${{ env.WORKING_DIRECTORY }}          
        run: |
          terraform init -input=false -chdir=${{ env.WORKING_DIRECTORY }} \
          -backend-config='bucket='${{ vars.BUCKET_NAME }} \
          -backend-config='region='${{ vars.BUCKET_REGION }} \
          -backend-config='key='${{ vars.BUCKET_KEY }}
          
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        
      - name: Terraform validate
        id: validate
        run: terraform validate
        
      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: "Run - Terraform Plan"
        id: plan
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          WORKING_DIRECTORY: "./src/terraform"
        working-directory: ${{ env.WORKING_DIRECTORY }}        
        run: terraform plan -input=false -no-color        
