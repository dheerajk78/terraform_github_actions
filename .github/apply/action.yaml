name: 'Terraform setup and apply'
description: 'Setup Terraform and applies plan'
inputs:
  WORKING_DIRECTORY:
    description: 'Directory that holds Terraform code'
    required: true
  AWS_ACCESS_KEY_ID: 
    description: 'AWS ACCESS KEY used for Terraform actions'
    required: true
  AWS_SECRET_ACCESS_KEY: 
    description: 'AWS ACCESS KEY used for Terraform actions'
    required: true
  GITHUB_TOKEN: 
    description: 'GitHub token for auth'
    required: true
  BUCKET_NAME:
    description: 'Bucket name for storing TF state'
    required: true
  BUCKET_REGION:
    description: 'Bucket region for storing TF state'
    required: true
  BUCKET_KEY:
    description: 'State file name for storing TF state'
    required: true

runs:
  using: "composite"
  steps:
    # Checkout the code
    # Marketplace: https://github.com/marketplace/actions/checkout
    - name: "Setup - Checkout"
      uses: actions/checkout@v4

    # Static analysis of Terraform templates to spot potential security issues
    # Marketplace: https://github.com/marketplace/actions/terraform-security-scan
    #- name: "Setup - Security Scan"
    #  uses: triat/terraform-security-scan@v3.2.0
    #  env:
    #    GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    # Provides AWS credentials to Terraform
    # By default, Terraform checks the home directory for a .aws folder with a credential file
    # Documentation: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/create-shared-credentials-file.html
    - name: "Setup - Build AWS Credentials"
      shell: bash
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id = ${{ inputs.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key = ${{ inputs.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
    # Downloads a specific version of Terraform CLI and adds it to PATH
    # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
    - name: "Setup - Terraform CLI"
      uses: hashicorp/setup-terraform@v3.1.2

    # Init pulls credentials from the .aws/credentials file by default
    - name: "Run - Terraform Init"
      working-directory: ${{ inputs.WORKING_DIRECTORY }}          
      shell: bash
      run: |
        terraform init -input=false  \
        -backend-config="bucket=${{ inputs.BUCKET_NAME }}" \
        -backend-config="region=${{ inputs.BUCKET_REGION }}" \
        -backend-config="key=${{ inputs.BUCKET_KEY }}"
      
 # Auto-approve prevents the requirement of human interaction
    - name: "Run - Terraform Apply"
      working-directory: ${{ inputs.WORKING_DIRECTORY }}        
      shell: bash
      run: terraform apply -input=false -auto-approve
